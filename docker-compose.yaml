# While the Docker images themselves are supported for production usage,
# this docker-compose.yaml is designed to be used by developers to run
# an environment locally. It is not designed to be used in production.
# We recommend to use Kubernetes in production with our Helm Charts:
# https://docs.camunda.io/docs/self-managed/platform-deployment/kubernetes-helm/
# For local development, we recommend using KIND instead of `docker-compose`:
# https://docs.camunda.io/docs/self-managed/platform-deployment/helm-kubernetes/guides/local-kubernetes-cluster/

# This is a lightweight configuration with Zeebe, Operate, Tasklist, and Elasticsearch
# See docker-compose.yml for a configuration that also includes Optimize, Identity, and Keycloak.

services:

  zeebe: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#zeebe
    image: camunda/zeebe:8.6.9
    container_name: zeebe
#    ports:
#      - "26500:26500"
#      - "9600:9600"
#      - "8088:8080"
    environment: # https://docs.camunda.io/docs/self-managed/zeebe-deployment/configuration/environment-variables/
      - ZEEBE_DEBUG=true
      #- ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      #- ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      # default is 1000, see here: https://github.com/camunda/zeebe/blob/main/exporters/elasticsearch-exporter/src/main/java/io/camunda/zeebe/exporter/ElasticsearchExporterConfiguration.java#L259
      #- ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
      # allow running with low disk space
#      - ZEEBE_BROKER_CLUSTER_CLUSTERSIZE=3
#      - ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR=3
#      - ZEEBE_BROKER_CLUSTER_PARTITIONSCOUNT=3
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      #- ZEEBE_BROKER_CONTACTPOINT=zeebe:26500
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
    #env_file:
    #  - .env
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    #volumes:
    #  - zeebe:/usr/local/zeebe/data
    networks:
      - camunda-platform
    #depends_on:
    #  - elasticsearch

  my-process: # Dein Prozess-Service
    #build: .
    image: moritz148/my-process-image:latest # Hier das Image deiner JAR-Datei
    container_name: c8-experiment
    environment:
      - ZEEBE_GATEWAY_ADDRESS=zeebe:26500  # Verbindung zur Zeebe-Engine
    networks:
      - camunda-platform  # Das gleiche Netzwerk wie Zeebe
    depends_on:
      # Warte, bis Zeebe verf√ºgbar ist
      zeebe:
        condition: service_healthy

#volumes:
#  zeebe:
#  elastic:
#  kibana:

networks:
  camunda-platform:


